/* Common base styles for both circular and linear keys */
:is(.key-base, .key-base path) {
  cursor: pointer;
  font-size: 0.8rem;
  font-weight: bold;
  border-width: 1.0px;
  border-style: solid;
  border-color: var(--serenity-key-border-color);
}

:is(.key-base.disabled, .key-base.disabled path) {
  cursor: not-allowed; 
  pointer-events: none;
  opacity: 1;
}

.key-base.root-note {
  border-color: var(--root-note-highlight);
}

/* white unselected */
:is(.key-base.white, .key-base.white path) {
  color: var(--serenity-note-text-on-white);
  background-color: var(--serenity-key-white);
  fill: var(--serenity-key-white);
}

/* white selected */
:is(.key-base.white.selected, .key-base.white.selected path) {
  background-color: var(--serenity-key-white-selected0);
  fill: var(--serenity-key-white-selected0);
}

/* black unselected */
:is(.key-base.black, .key-base.black path) {
  color: var(--serenity-note-text-on-black);
  background-color: var(--serenity-key-black);
  fill: var(--serenity-key-black);
}

:is(.key-base.black.selected, .key-base.black.selected path) {
  background-color: var(--serenity-key-black-selected0);
  fill: var(--serenity-key-black-selected0);
}

/* Highlighted unselectd */
:is(.key-base.highlighted, .key-base.highlighted path) {
  color: var(--serenity-note-text-on-white);
  background-color: var(--serenity-highlighted-unselected);
  fill: var(--serenity-highlighted-unselected);
}

/* Highlighted selected */
:is(.key-base.highlighted.selected, .key-base.highlighted.selected path) {
  color: var(--serenity-note-text-on-white);
  background-color: var(--serenity-highlighted-selected);
  fill: var(--serenity-highlighted-selected);
}

/* Muted unselectd */
:is(.key-base.muted, .key-base.muted path) {
  color: var(--serenity-muted-font);
  background-color: var(--serenity-muted-unselected);
  fill: var(--serenity-muted-unselected);
}

/* Muted selected */
:is(.key-base.muted.selected, .key-base.muted.selected path) {
  color: var(--serenity-note-text-on-black);
  background-color: var(--serenity-muted-selected);
  fill: var(--serenity-muted-selected);
}


.scale-boundary-svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 3;
  overflow: visible;
}

.scale-boundary {
  stroke: var(--serenity-scale-boundary-color);
}

.scale-boundary.linear {
  stroke-width: 2;
  vector-effect: non-scaling-stroke;
}

.scale-boundary.circular {  
  stroke-width: 2;
}